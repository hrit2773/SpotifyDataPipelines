{
	"name": "incremental_loop",
	"properties": {
		"activities": [
			{
				"name": "ForEachTable",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.loop_input",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "SQLToDataLake",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "CDCLookup",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM @{item().schema}.@{item().table}\nWHERE @{item().cdc_col} > '@{if(\n    empty(item().from_date),\n    activity('CDCLookup').output.firstRow.cdc_timestamp,\n    item().from_date\n)}'\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "parquet_dynamic",
									"type": "DatasetReference",
									"parameters": {
										"p_container": "bronze",
										"p_folder": {
											"value": "@item().table",
											"type": "Expression"
										},
										"p_file": {
											"value": "@concat(item().table,'_',variables('current'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CDCLookup",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"dataset": {
									"referenceName": "json_dynamic",
									"type": "DatasetReference",
									"parameters": {
										"p_container": "bronze",
										"p_folder": {
											"value": "@{item().table}_cdc",
											"type": "Expression"
										},
										"p_file": "cdc.json"
									}
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "current",
								"value": {
									"value": "@utcNow()",
									"type": "Expression"
								}
							}
						},
						{
							"name": "IncrementalData",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "SQLToDataLake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('SQLToDataLake').output.dataRead,0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "DeleteEmptyFile",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "parquet_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"p_container": "bronze",
													"p_folder": {
														"value": "@item().table",
														"type": "Expression"
													},
													"p_file": {
														"value": "@concat(item().table,'_',variables('current'))",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "max_cdc",
										"type": "Script",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "AzureSQL",
											"type": "LinkedServiceReference"
										},
										"typeProperties": {
											"scripts": [
												{
													"type": "Query",
													"text": {
														"value": "select Max(@{item().cdc_col}) as cdc from @{item().schema}.@{item().table}",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "update_cdc",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "max_cdc",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"additionalColumns": [
													{
														"name": "cdc_timestamp",
														"value": {
															"value": "@activity('max_cdc').output.resultSets[0].rows[0].cdc",
															"type": "Expression"
														}
													}
												],
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "json_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"p_container": "bronze",
													"p_folder": {
														"value": "@{item().table}_cdc",
														"type": "Expression"
													},
													"p_file": "empty.json"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "json_dynamic",
												"type": "DatasetReference",
												"parameters": {
													"p_container": "bronze",
													"p_folder": {
														"value": "@{item().table}_cdc",
														"type": "Expression"
													},
													"p_file": "cdc.json"
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Failure",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ForEachTable",
						"dependencyConditions": [
							"Failed",
							"Skipped"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-21.northcentralus.logic.azure.com:443/workflows/02c4aaa439244a43aaf811131b66fd33/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=ILWEDB9rGDwwwXc9ryrdWJv1n9rUMOc5v5JK3dz0FqE",
					"body": {
						"value": "{\n    \"pipeline_name\":\"@{pipeline().Pipeline}\",\n    \"pipeline_runId\":\"@{pipeline().RunId}\"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"loop_input": {
				"type": "array",
				"defaultValue": [
					{
						"schema": "dbo",
						"table": "DimUser",
						"cdc_col": "updated_at",
						"from_date": ""
					},
					{
						"schema": "dbo",
						"table": "DimTrack",
						"cdc_col": "updated_at",
						"from_date": ""
					},
					{
						"schema": "dbo",
						"table": "DimDate",
						"cdc_col": "date",
						"from_date": ""
					},
					{
						"schema": "dbo",
						"table": "DimArtist",
						"cdc_col": "updated_at",
						"from_date": ""
					},
					{
						"schema": "dbo",
						"table": "FactStream",
						"cdc_col": "stream_timestamp",
						"from_date": ""
					}
				]
			}
		},
		"variables": {
			"current": {
				"type": "String"
			}
		},
		"annotations": []
	}
}